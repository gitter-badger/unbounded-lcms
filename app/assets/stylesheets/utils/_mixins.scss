// Block Element
// @access public
// @param {String} $element - Element's name
@mixin element($element) {
  &__#{$element} {
    @content;
  }
}
// Block Modifier
// @access public
// @param {String} $modifier - Modifier's name
@mixin modifier($modifier) {
  &--#{$modifier} {
    @content;
  }
}
// @alias element
@mixin e($element) {
  @include element($element) {
    @content;
  }
}
// @alias modifier
@mixin m($modifier) {
  @include modifier($modifier) {
    @content;
  }
}

@mixin clamp($lines) {
  overflow: hidden;
  text-overflow: ellipsis;
  display: -webkit-box;
  -webkit-line-clamp: $lines;
  -webkit-box-orient: vertical;
}

@mixin ellipsis {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

@mixin add-gutter($type: margin, $subtype: bottom, $x: 1, $gutter: $grid-column-gutter) {
  @each $breakpoint, $value in $gutter {
    $margin: rem-calc($value);

    @include breakpoint($breakpoint) {
      #{$type}-#{$subtype}: $margin * $x;
    }
  }
}

@mixin add-column-padding {
  @include add-gutter(padding, left, .5);
  @include add-gutter(padding, right, .5);
}

@mixin placeholder($color: $ub-txt){
  ::-webkit-input-placeholder { /* Chrome/Opera/Safari */
    color: $color;
  }
  ::-moz-placeholder { /* Firefox 19+ */
    color: $color;
  }
  :-ms-input-placeholder { /* IE 10+ */
    color: $color;
  }
  :-moz-placeholder { /* Firefox 18- */
    color: $color;
  }
}

@mixin aspect-ratio($width, $height) {
  position: relative;

  &:before {
    content: '';
    display: block;
    padding-top: ($height / $width) * 100%;
    width: 100%;
  }

  > .content {
    bottom: 0;
    left: 0;
    position: absolute;
    right: 0;
    top: 0;
  }
}
