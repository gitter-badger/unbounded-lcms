%ub-btn-font {
  @include txt-element(button);
}

.o-btn {
  $o-btn-padding: 1em 2.5em;

  @include m(light) {
    @extend .button;
    @extend .secondary;
    @extend %ub-btn-font;
  }

  @include m(base) {
    @include button($background: $ub-btn-base, $color: $ub-white);
    @extend %ub-btn-font;
  }

  @include m(dark) {
    @extend .button;
    @extend .primary;
    @extend %ub-btn-font;
  }

  @include m(bordered) {
    @include button-hollow;
    @include button-hollow-style($ub-btn-dark);
  }

  @include m(expand) {
    @include button-expand(true);
  }
}

.o-ub-btn {
  @include button($background: $ub-btn-base, $color: $ub-white);
  margin-bottom: $ub-small-margin / 2;
  min-width: 200px;

  @include m(bordered) {
    @include button-hollow;
    @include button-hollow-style($ub-btn-base);
    @include txt-element(button);
  }

  @include m(connect) {
    @include button($background: $ub-nav-link, $background-hover: auto, $color: $ub-primary);
    @include txt-element(button);
    margin-bottom: 0;
  }

  @include m(disabled) {
    @include button-disabled;
    @include txt-element(button);
  }

  @each $type, $color in $ub-buttons {
    $btn-color: if($type == 'base', $ub-txt, $ub-white);
    @include m(#{$type}) {
      @include button($background: $color, $background-hover: auto, $color: $btn-color);
      @include txt-element(button);
    }
  }

  @each $type, $color in $ub-buttons {
    $btn-color: if($type == 'base', $ub-txt, $ub-white);
    @include m(bordered-#{$type}) {
      @include button-hollow;
      @include button-hollow-style($color);
      @include txt-element(button);
      color: $btn-color;
    }
  }

  @each $type, $color in $ub-buttons {
    @include m(2bordered-#{$type}) {
      @include button-hollow;
      @include button-hollow-style($color);
      @include txt-element(button);
      color: $color;
    }
  }

}
